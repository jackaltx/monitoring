---
- name: Main tasks
  hosts: all
  gather_facts: true
  tasks:
    - name: Debug connection info
      debug:
        msg:
          - "Running on {{ inventory_hostname }} with IP {{ ansible_host }}"
          - "Ansible host: {{ ansible_host | default('undefined') }}"
          - "Ansible port: {{ ansible_port | default('undefined') }}"
          - "Ansible user: {{ ansible_user | default('undefined') }}"
          - "Connection type: {{ ansible_connection | default('undefined') }}"
      delegate_to: localhost

    - name: Get basic system info
      setup:
        gather_subset:
          - "!all"
          - "!any"
          - "distribution"
          - "pkg_mgr"

    - name: Debug system info
      debug:
        msg:
          - "Distribution: {{ ansible_distribution }}"
          - "Package Manager: {{ ansible_pkg_mgr }}"

    - name: Branch on Debian
      when: ansible_distribution in ["Debian", "Ubuntu"]
      block:
        - name: Update apt cache
          apt:
            update_cache: yes
            cache_valid_time: 3600
          become: true

        - name: Install required packages (podman-debian)
          apt:
            name:
              - gpg
              - ca-certificates
              - lsof
            state: present
          become: true
          register: pkg_install
          retries: 3
          delay: 10
          until: pkg_install is success

    - name: Branch on Rocky
      when: ansible_distribution == "Rocky"
      block:
        - name: Install required packages (podman-rocky)
          dnf:
            name:
              - lsof
              - procps-ng
            state: present
            update_cache: yes
          become: true
          register: pkg_install
          retries: 3
          delay: 10
          until: pkg_install is success

    - name: Fail for unsupported distribution
      fail:
        msg: "Distribution {{ ansible_distribution }} not supported"
      when: ansible_distribution not in ["Debian", "Rocky", "Ubuntu"]

    # Test systemd functionality
    - name: Ensure systemd is available
      command: systemctl --version
      changed_when: false
      register: systemd_check

    - name: Show systemd version
      debug:
        var: systemd_check.stdout_lines

    - name: Configure container for systemd operation
      command: systemctl daemon-reexec
      when: systemd_check is success
      become: true
