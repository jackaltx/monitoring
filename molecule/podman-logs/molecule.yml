---
dependency:
  name: galaxy
  options:
    requirements-file: ../../molecule/shared/requirements.yml
    ignore-errors: true

driver:
  name: podman
  options:
    managed: true

platforms:
  - name: "uut-ct0"
    image: "gitea.a0a0.org:3001/jackaltx/testing-containers/debian12-ssh:latest"
    network: monitoring-net
    command: "/sbin/init"
    privileged: true
    volumes:
      - /sys/fs/cgroup:/sys/fs/cgroup:rw
    cgroupns_mode: host
    ssh_host: "127.0.0.1"
    ssh_port: 2223
    ssh_user: "jackaltx"
    connection: ssh

  - name: "uut-ct1"
    image: "gitea.a0a0.org:3001/jackaltx/testing-containers/rocky93-ssh:latest"
    network: monitoring-net
    command: "/sbin/init"
    privileged: true
    volumes:
      - /sys/fs/cgroup:/sys/fs/cgroup:rw
    cgroupns_mode: host
    ssh_host: "127.0.0.1"
    ssh_port: 2222
    ssh_user: "jackaltx"
    connection: ssh

provisioner:
  name: ansible
  log: true
  env:
    ANSIBLE_SSH_ARGS: "-o IdentityFile=~/.ssh/id_ed25519 -o StrictHostKeyChecking=no -o UserKnownHostsFile=/dev/null"
  playbooks:
    create: "../../molecule/shared/podman/create.yml"
    prepare: "../../molecule/shared/podman/prepare.yml"
    verify: "../../molecule/shared/verify/verify-logs.yml"
    destroy: "../../molecule/shared/podman/destroy.yml"
  config_options:
    defaults:
      roles_path: roles
      interpreter_python: auto_silent
      host_key_checking: false
  inventory:
    group_vars:
      all:
        project_root: "{{ lookup('env', 'MOLECULE_PROJECT_DIRECTORY') }}"
        report_root: "{{ lookup('env', 'MOLECULE_PROJECT_DIRECTORY') }}/verify_output"
        # host_vars:
        # uut-ct:
        ansible_connection: ssh
        ansible_user: "jackaltx" # "${USER}"
        # DEBUG: Add explicit SSH settings
        # ansible_ssh_common_args: "-o StrictHostKeyChecking=no -o UserKnownHostsFile=/dev/null"
        # ansible_ssh_extra_args: "-o StrictHostKeyChecking=no -o UserKnownHostsFile=/dev/null"
        ansible_ssh_common_args: "-o IdentityFile=~/.ssh/id_ed25519"
        ansible_ssh_private_key_file: "~/.ssh/id_ed25519"

        loki_local_storage: true
        alloy_loki_endpoint: "127.0.0.1"

scenario:
  name: podman-logs
  test_sequence:
    - destroy
    - create
    - prepare
    - converge
    - idempotence
    - verify
    - destroy

verifier:
  name: ansible
