---
dependency:
  name: galaxy
  options:
    requirements-file: ../../molecule/shared/requirements.yml
    ignore-errors: true

driver:
  name: default

# Define test VM in platforms section
platforms:
  - name: "uut-vm" # hardcode this as it is ugly to watch the lookup
    template: "{{ lookup('env', 'PROXMOX_TEMPLATE') | default('debian-12-template',true) }}"

provisioner:
  name: ansible
  log: true
  playbooks:
    # create: "{{ lookup('env', 'MOLECULE_PROJECT_DIRECTORY') | dirname | dirname }}/molecule/shared/proxmox/create.yml"
    # prepare: "{{ lookup('env', 'MOLECULE_PROJECT_DIRECTORY') | dirname | dirname }}/molecule/shared/proxmox/prepare.yml"
    # destroy: "{{ lookup('env', 'MOLECULE_PROJECT_DIRECTORY') | dirname | dirname }}/molecule/shared/proxmox/destroy.yml"
    create: "../../../../molecule/shared/proxmox/create.yml"
    prepare: "../../../../molecule/shared/proxmox/prepare.yml"
    destroy: "../../../../molecule/shared/proxmox/destroy.yml"
  config_options:
    defaults:
      roles_path: roles
      interpreter_python: auto_silent
      host_key_checking: false
  inventory:
    group_vars:
      all:
        proxmox_vmid: "{{ lookup('env', 'PROXMOX_VMID') | default('9100', true) | int }}"
        proxmox_template: "{{ lookup('env', 'PROXMOX_TEMPLATE') | default('debian-12-template',true) }}"
        proxmox_vm_name: "uut-vm"
        molecule_ip: "{{ lookup('env', 'MOLECULE_IP') | default('192.168.101.90',true) }}"

        project_root: "{{ lookup('env', 'MOLECULE_PROJECT_DIRECTORY') }}"
        report_root: "{{ lookup('env', 'MOLECULE_PROJECT_DIRECTORY') | dirname | dirname }}/verify_output"
    host_vars:
      uut-vm:
        ansible_host: "{{ lookup('env', 'MOLECULE_IP') | default('192.168.101.90',true) }}"
        ansible_connection: ssh
        ansible_user: "${USER}"

        telgraf2influxdb_configs:
          {
            "localhost":
              {
                "url": "http://127.0.0.1",
                "token": "",
                "bucket": "telegraf",
                "org": "lavnet",
                "namedrop": '["influxdb_oss"]',
                "bucket_tag": "",
                "exclude_bucket_tag": "",
                "ping_timeout": "0s",
                "read_idle_timeout": "0s",
                "insecure_skip_verify": false,
              },
          }

scenario:
  name: proxmox
  test_sequence:
    - destroy
    - create
    - prepare
    - converge
    - verify
    - destroy

verifier:
  name: ansible
